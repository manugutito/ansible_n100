- name: Set up n100 server
  hosts: n100
  tasks:
  # Configure sshd
  # Here we rely on the keys being copied (taken from GitHub during install)
  # Perhaps we should make sure that at least the key Ansible uses is present
  # before we restart sshd, otherwise we could get locked out
  - name: Copy sshd config file
    become: yes
    ansible.builtin.copy:
      src: ./config_files/sshd_config
      dest: /etc/ssh/sshd_config
      remote_src: no
      backup: yes
      owner: root
      group: root
      mode: '0640'
    notify:
      - restart ssh

  # Install basics
  # TODO: put packages in Ansible variable
  - name: Update and upgrade apt packages
    become: true
    apt:
      upgrade: yes
      update_cache: yes
      cache_valid_time: 86400
  - name: Install a few things
    become: true
    apt:
      update_cache: yes
      cache_valid_time: 86400
      name:
        - iotop
        - minidlna
        - openseachest
        - postfix
        - powertop
        - samba
        - ufw
        - unzip
        - wireguard
        - zfsutils-linux

  # Basic ufw configuration
  # TODO: blocking incoming by default seems problematic, figure out
  - name: Allow ssh
    become: true
    community.general.ufw:
      rule: allow
      name: OpenSSH
    notify:
    - reload ufw
  - name: Allow samba
    become: true
    community.general.ufw:
      rule: allow
      name: Samba
    notify:
    - reload ufw
  - name: Allow minidlna port 1900
    become: true
    community.general.ufw:
      rule: allow
      port: 1900
    notify:
    - reload ufw
  - name: Allow minidlna port 8200
    become: true
    community.general.ufw:
      rule: allow
      port: 8200
    notify:
    - reload ufw
  - name: Enable ufw
    become: true
    ufw:
      state: enabled

  - name: Load samba config
    become: yes
    ansible.builtin.copy:
      src: ./config_files/smb.conf
      dest: /etc/samba/smb.conf
      remote_src: no
      backup: yes
      owner: root
      group: root
      mode: '0640'
    notify:
      - restart samba

  # Power optimizations
  # Bear in mind that no effort was made to find the right path for the Realtek NIC
  - name: Edit file to enable ASPM on the Realtek NIC
    become: true
    ansible.builtin.lineinfile:
      path: /sys/bus/pci/drivers/r8169/0000:02:00.0/link/l1_aspm
      regexp: '0'
      line: '1'
  # This may not be a great idea to run blindly. Also it is not idempotent
  - name: Run powertop --auto-tune
    become: true
    ansible.builtin.shell: powertop --auto-tune

  # Configure minidlna
  # We take a copy of an existing config file
  # TODO: do not restart minidlna service if no changes were made
  - name: Copy minidlna config
    become: yes
    ansible.builtin.copy:
      src: ./config_files/minidlna.conf
      dest: /etc/minidlna.conf
      remote_src: no
      backup: yes
      owner: root
      group: root
      mode: '0644'
    notify:
    - restart minidlna
  - name: Create hdd group
    become: yes
    ansible.builtin.group:
      name: hdd
      state: present
  - name: add minidlna to group hdd
    become: yes
    ansible.builtin.user:
      name: minidlna
      groups: hdd
      append: yes
  - name: add mjgutierrez to group hdd
    become: yes
    ansible.builtin.user:
      name: mjgutierrez
      groups: hdd
      append: yes

  # Install docker
  - name: Install docker pre-requisites
    become: true
    apt:
      update_cache: yes
      cache_valid_time: 86400
      name:
        - ca-certificates
        - curl
      state: latest
  # This method is deprecated now. TODO: use new method
  # Message:
  # https://download.docker.com/linux/ubuntu/dists/noble/InRelease: Key is stored in
  # legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in
  # apt-key(8) for details.
  - name: Add Docker GPG apt Key
    become: true
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  # TODO: "noble" is hardcoded here
  - name: Add Docker Repository
    become: true
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu noble stable
      state: present
  - name: Install Docker engine
    become: true
    apt:
      update_cache: yes
      cache_valid_time: 86400
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin
      state: latest

  # Install python stuff
  - name: Install python apt packages
    become: true
    apt:
      update_cache: yes
      cache_valid_time: 86400
      name:
        - python3-pip
        - python3.12-venv

  # Postfix stuff
  # To generate the app password see here:
  # https://support.google.com/accounts/answer/185833?hl=en
  # For more information about how to configure:
  # https://dev.to/chigozieco/configure-postfix-to-send-email-with-gmails-smtp-from-the-terminal-4cco
  - name: Install postfix
    become: true
    apt:
      name:
        - postfix
        - ca-certificates
        - mailutils

  - name: Copy app password for email
    become: true
    ansible.builtin.copy:
      src: ./config_files/sasl_passwd
      dest: /etc/postfix/sasl/sasl_passwd
      remote_src: no
      backup: yes
      owner: root
      group: root
      mode: '0600'
    notify:
    - postmap sasl

  - name: Copy postfix config file
    become: true
    ansible.builtin.copy:
      src: ./config_files/main.cf
      dest: /etc/postfix/main.cf
      remote_src: no
      backup: yes
      owner: root
      group: root
      mode: '0644'
    notify:
    - restart postfix

# Handlers section: to act if e.g. a config file has changed
  handlers:

  - name: reload ufw
    become: true
    ufw:
      state: reloaded

  - name: restart ssh
    become: yes
    service:
      name: ssh
      state: restarted

  - name: restart minidlna
    become: yes
    service:
      name: minidlna
      state: restarted

  - name: restart samba
    become: yes
    service:
      name: smbd
      state: restarted

  - name: postmap sasl
    become: yes
    ansible.builtin.shell: postmap /etc/postfix/sasl/sasl_passwd && chmod 600 /etc/postfix/sasl/*

  - name: restart postfix
    become: yes
    service:
      name: postfix
      state: restarted
